version: '3.2'

networks:
  binghe-network:
    driver: bridge

volumes:
  prometheus_data: {}
services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    volumes:
    - ./data/db_data:/var/lib/mysql
    - ./config/mysql/init:/docker-entrypoint-initdb.d/
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--default-time-zone=+8:00'
    ]
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: bh_im
      MYSQL_USER: binghe
      MYSQL_PASSWORD: binghe
    ports:
    - 3306:3306
    networks:
    - binghe-network
  mysqld-exporter:
    image: prom/mysqld-exporter
    container_name: mysqld-exporter
    ports:
    - 9104:9104
    environment:
    - DATA_SOURCE_NAME=root:root@tcp(mysql:3306)/
    depends_on:
    - mysql
    networks:
    - binghe-network
  redis:
    container_name: redis
    image: redislabs/redismod:latest
    ports:
    - 6379:6379
    networks:
    - binghe-network

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - 8082:8081
    networks:
    - binghe-network
  redis-exporter:
    image: oliver006/redis_exporter
    command: -redis.addr redis://redis:6379
    ports:
    - 9121:9121
    networks:
    - binghe-network

  sentinel:
    image: bladex/sentinel-dashboard
    container_name: sentinel
    ports:
    - 8858:8858
    networks:
    - binghe-network
  nacos:
    image: nacos/nacos-server:2.0.3
    container_name: nacos-standalone-mysql
    env_file:
    - ./config/nacos/nacos-standlone-mysql.env
    volumes:
    - ./data/nacos_logs/:/home/nacos/logs
    - ./config/nacos/custom.properties:/home/nacos/init.d/custom.properties
    ports:
    - 8848:8848
    - 9848:9848
    - 9555:9555
    depends_on:
    - mysql
    restart: on-failure
    networks:
    - binghe-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
    command:
    - --path.procfs=/host/proc
    - --path.rootfs=/rootfs
    - --path.sysfs=/host/sys
    - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    ports:
    - 9100:9100
    networks:
    - binghe-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
    - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    - ./data/prometheus_data:/prometheus
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --web.enable-lifecycle
    extra_hosts:
    - host.docker.internal:host-gateway
    ports:
    - 9090:9090
    networks:
    - binghe-network

  grafana:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    environment:
    - GF_INSTALL_PLUGINS=redis-app
    - GF_INSTALL_PLUGINS=redis-datasource
    - GF_INSTALL_PLUGINS=redis-explorer-app
    volumes:
    - ./grafana-storage:/var/lib/grafana
    ports:
    - 3000:3000
    external_links:
    - redis:redis
    networks:
    - binghe-network

  rmqnamesrv:
    image: apacherocketmq/rocketmq:4.5.0
    container_name: rmqnamesrv
    ports:
    - 9876:9876
    volumes:
    - ./data/rocketmq/logs:/home/rocketmq/logs
    - ./data/rocketmq/store:/home/rocketmq/store
    command: sh mqnamesrv
    networks:
    - binghe-network

  rmqbroker:
    image: apacherocketmq/rocketmq:4.5.0
    container_name: rmqbroker
    ports:
    - 10909:10909
    - 10911:10911
    - 10912:10912
    volumes:
    - ./data/rocketmq/logs:/home/rocketmq/logs
    - ./data/rocketmq/store:/home/rocketmq/store
    - ./config/rocketmq/broker.conf:/home/rocketmq/rocketmq-4.5.0/conf/broker.conf
    command: sh mqbroker -n rmqnamesrv:9876 -c ../conf/broker.conf
    depends_on:
    - rmqnamesrv
    environment:
    - JAVA_HOME=/usr/lib/jvm/jre
    networks:
    - binghe-network
  rmqconsole:
    image: styletang/rocketmq-console-ng:latest
    container_name: rocketmq-console
    ports:
    - 8076:8080
    depends_on:
    - rmqnamesrv
    environment:
    - JAVA_OPTS= -Dlogging.level.root=info  -Drocketmq.namesrv.addr=rmqnamesrv:9876
    - Dcom.rocketmq.sendMessageWithVIPChannel=false
    networks:
    - binghe-network

  elasticsearch:
    image: elasticsearch:7.14.2
    container_name: elasticsearch
    volumes:
      - ./config/elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
    - "9200:9200"
    - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    networks:
    - binghe-network

  logstash:
    image: logstash:7.14.2
    container_name: logstash
    volumes:
      - ./config/elk/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./config/elk/pipeline:/usr/share/logstash/pipeline
    ports:
    - "5044:5044"
    - "5000:5000/tcp"
    - "5000:5000/udp"
    - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
    - binghe-network
    depends_on:
    - elasticsearch

  kibana:
    image: kibana:7.14.2
    container_name: kibana
    volumes:
      - ./config/elk/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
    - "5601:5601"
    networks:
    - binghe-network
    depends_on:
    - elasticsearch



